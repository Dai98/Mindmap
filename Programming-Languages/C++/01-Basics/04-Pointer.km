{
    "root": {
        "data": {
            "id": "cuol1ttmqds0",
            "created": 1691642024859,
            "text": "Pointer & Memory",
            "font-size": 18
        },
        "children": [
            {
                "data": {
                    "id": "cuol53a1qi00",
                    "created": 1691642280535,
                    "text": "What is a pointer",
                    "font-size": 16,
                    "layout": null
                },
                "children": [
                    {
                        "data": {
                            "id": "cuol56zn7o80",
                            "created": 1691642288614,
                            "text": "A Pointer is an integer representing an address of a piece of space in memory",
                            "font-size": 16,
                            "layout": null
                        },
                        "children": []
                    },
                    {
                        "data": {
                            "id": "cuol6hahj3s0",
                            "created": 1691642389401,
                            "text": "Operator & gets the address of a variable or an object \nOperator * accesses the content of a pointer",
                            "font-size": 16,
                            "layout": null
                        },
                        "children": []
                    },
                    {
                        "data": {
                            "id": "cuqumzbr2cg0",
                            "created": 1691872192389,
                            "text": "Printing a pointer",
                            "font-size": 16,
                            "layout": null
                        },
                        "children": [
                            {
                                "data": {
                                    "id": "cuqunat79cw0",
                                    "created": 1691872217389,
                                    "text": "Since pointer is an integer, we can print it",
                                    "font-size": 16,
                                    "layout": null
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "cuqunl1am6w0",
                                    "created": 1691872239646,
                                    "text": "int * a = new int(5);\nprintf(\"Pointer: %p\", a);    // C\ncout << a << endl;   // C++",
                                    "font-size": 16,
                                    "layout": null
                                },
                                "children": []
                            }
                        ]
                    }
                ]
            },
            {
                "data": {
                    "id": "cuolefxsacg0",
                    "created": 1691643013370,
                    "text": "Pointer of primitive types",
                    "font-size": 16,
                    "layout": null
                },
                "children": [
                    {
                        "data": {
                            "id": "cuol6ye4f6o0",
                            "created": 1691642426626,
                            "text": "int num = 10;\nint * p1, * p2;\np1 = &num;\np2 = &num;\n*p1 = 20;\n*p2 = 30;",
                            "font-size": 16,
                            "layout": null
                        },
                        "children": []
                    }
                ]
            },
            {
                "data": {
                    "id": "cuolesgfivs0",
                    "created": 1691643040618,
                    "text": "Pointer of struct",
                    "font-size": 16,
                    "layout": null
                },
                "children": [
                    {
                        "data": {
                            "id": "cuolewsy1r40",
                            "created": 1691643050082,
                            "text": "Members in struct are sequential in memory",
                            "font-size": 16,
                            "layout": null
                        },
                        "children": []
                    },
                    {
                        "data": {
                            "id": "cuqubofzlc80",
                            "created": 1691871306695,
                            "text": "struct User {\n\tstd::string username;\n\tstd::string password;\n}",
                            "font-size": 16,
                            "layout": null
                        },
                        "children": []
                    },
                    {
                        "data": {
                            "id": "cuquboyh9o80",
                            "created": 1691871307813,
                            "text": "struct User* p1 = new User;\np1->username = \"admin\";\np1->password = \"123456\"; ",
                            "font-size": 16,
                            "layout": null
                        },
                        "children": []
                    },
                    {
                        "data": {
                            "id": "cuqubpgxf740",
                            "created": 1691871308928,
                            "text": "-> operator is for a pointer of a struct variable to access its member\n. operator is for the struct variable itself to access its member, e.g.\n\nstruct User user = new User {\"user\", \"123456\"};\nstruct User * p1 = &user;\nuser.username = \"ABC\";\np1->username = \"ABCD\";",
                            "layout": null,
                            "font-size": 16
                        },
                        "children": []
                    }
                ]
            },
            {
                "data": {
                    "id": "cuquvepgwrs0",
                    "created": 1691872852783,
                    "text": "Constant Pointer",
                    "font-size": 16,
                    "layout": null
                },
                "children": [
                    {
                        "data": {
                            "id": "cuquvnastwg0",
                            "created": 1691872871487,
                            "text": "Since pointer is an integer, we can use constant keyword on a pointer variable\nPointer with constant keyword cannot be modified",
                            "font-size": 16,
                            "layout": null
                        },
                        "children": []
                    },
                    {
                        "data": {
                            "id": "cuquxs6fc5k0",
                            "created": 1691873038835,
                            "text": "// The pointer itself is constant\n// But the integer that the pointer points to is not constant\nint * const p1 = new int(5);\n// No Error\n*p1 = 5\n// Error\np1 = p2;",
                            "layout": null,
                            "font-size": 16
                        },
                        "children": []
                    },
                    {
                        "data": {
                            "id": "cuqv257uc0w0",
                            "created": 1691873380676,
                            "text": "// The pointer is not constant\n// But the integer that the pointer points to is constant\nconst int * p1 = new int(5);\n// Error\n*p1 = 5;\n// No Error\np1 = p2;",
                            "font-size": 16,
                            "layout": null
                        },
                        "children": []
                    },
                    {
                        "data": {
                            "id": "cuqv2tpertc0",
                            "created": 1691873433981,
                            "text": "// Both the pointer and the integer is constant\nconst int * const p1 = new int(5);\n// Error\n*p1 = 5;\n// Error\np1 = p2;",
                            "font-size": 16,
                            "layout": null
                        },
                        "children": []
                    }
                ]
            },
            {
                "data": {
                    "id": "cuqumdmhep40",
                    "created": 1691872145148,
                    "text": "Pointer of Pointer",
                    "font-size": 16,
                    "layout": null
                },
                "children": [
                    {
                        "data": {
                            "id": "cuqur0qona80",
                            "created": 1691872508925,
                            "text": "Since pointer is an integer, pointer also has a pointer",
                            "font-size": 16,
                            "layout": null
                        },
                        "children": []
                    },
                    {
                        "data": {
                            "id": "cuqur9z6kyo0",
                            "created": 1691872529030,
                            "text": "int x = 42;\nint *p1 = &x; \nint **p2 = &p1;",
                            "font-size": 16,
                            "layout": null
                        },
                        "children": []
                    },
                    {
                        "data": {
                            "id": "cuqurkf2bn40",
                            "created": 1691872551758,
                            "text": "Pointer of a pointer is convenient for 2-dimensional arrays and complicated struct/objects\nBut avoid using triple pointers, for readability and maintainability of codes",
                            "font-size": 16,
                            "layout": null
                        },
                        "children": []
                    }
                ]
            },
            {
                "data": {
                    "id": "cuquj4eh3l40",
                    "created": 1691871889981,
                    "text": "Pointer of array",
                    "font-size": 16,
                    "layout": null
                },
                "children": [
                    {
                        "data": {
                            "id": "cuqv5w7b9r40",
                            "created": 1691873674509,
                            "text": "The variable of an array itself can be regarded as a pointer to the first element in the array, e.g.\nint arr[5] = {1, 2, 3, 4, 5};\nint* p1 = arr;",
                            "font-size": 16,
                            "layout": null
                        },
                        "children": []
                    },
                    {
                        "data": {
                            "id": "cuqv7jf1u9c0",
                            "created": 1691873803407,
                            "text": "Since pointer is an integer, we can do add/substraction to move the pointer in the array, e.g.\nint* p1 = arr;\nint* p2 = (p1+1);   \n// p2 points to the second element in arr\nNote that this operation doesn't have out-of-bound check",
                            "layout": null,
                            "font-size": 16
                        },
                        "children": []
                    },
                    {
                        "data": {
                            "id": "cuqv9bhznc00",
                            "created": 1691873942899,
                            "text": "Note that even though the pointer of an array can be regarded as a pointer to the first element\nThe pointer of the array is still pointing to the whole array\nHence if int arr[3] = {1, 2, 3};, then (&arr+1) will get the address of the space after the whole array \n(arr+1 is the pointer to the second element, not &arr+1)\nIn other words, the address of the fourth element will be returned if it were there",
                            "font-size": 16,
                            "layout": null
                        },
                        "children": []
                    }
                ]
            },
            {
                "data": {
                    "id": "cuoli9xkuj40",
                    "created": 1691643313753,
                    "text": "Memory of a program",
                    "font-size": 16,
                    "layout": null
                },
                "children": [
                    {
                        "data": {
                            "id": "cuolipdt7400",
                            "created": 1691643347386,
                            "text": "The memory space of a program is normally separated into a few segments",
                            "font-size": 16,
                            "layout": null
                        },
                        "children": []
                    },
                    {
                        "data": {
                            "id": "cuolizj8ehs0",
                            "created": 1691643369482,
                            "text": "Stack - Stack segment is for function invocation and local variables\nHeap - Heap segment is for dynamic allocation (e.g. objects) and explicit allocation (e.g. new/malloc, etc.)\nBSS - BSS (Block Started by Symbol) segment is for uninitialized global variables and static variables\nData - Data segment is for initialized global variables and static variables\nCode/Text - The code segment stores executable instruction sets to finish the task of the program",
                            "font-size": 16,
                            "layout": null
                        },
                        "children": []
                    },
                    {
                        "data": {
                            "id": "cuom0khpyqg0",
                            "created": 1691644747294,
                            "text": "In practice, these memory segments are allocated based on needs of program\nIf a program doesn't have uninitialized variables, then it will not have BSS segment, for instance",
                            "font-size": 16,
                            "layout": null
                        },
                        "children": []
                    }
                ]
            },
            {
                "data": {
                    "id": "cuolh1bqync0",
                    "created": 1691643216655,
                    "text": "Allocate Memory",
                    "font-size": 16,
                    "layout": null
                },
                "children": [
                    {
                        "data": {
                            "id": "cuolh6adf2o0",
                            "created": 1691643227455,
                            "text": "C Style",
                            "font-size": 16,
                            "layout": null
                        },
                        "children": [
                            {
                                "data": {
                                    "id": "cuolrpzba1s0",
                                    "created": 1691644053964,
                                    "text": "Allocate",
                                    "font-size": 16,
                                    "layout": null
                                },
                                "children": [
                                    {
                                        "data": {
                                            "id": "cuolsexf5ko0",
                                            "created": 1691644108269,
                                            "text": "void* malloc(size_t size)\nThis method will return a pointer pointing to the start of the allocated memory\nThe type of the pointer needs to be converted explicitly",
                                            "font-size": 16,
                                            "layout": null
                                        },
                                        "children": []
                                    },
                                    {
                                        "data": {
                                            "id": "cuoltblo1uo0",
                                            "created": 1691644179392,
                                            "text": "e.g. int *p1 = (int*) malloc(sizeof(int));",
                                            "font-size": 16,
                                            "layout": null
                                        },
                                        "children": []
                                    }
                                ]
                            },
                            {
                                "data": {
                                    "id": "cuolrrq5ggw0",
                                    "created": 1691644057764,
                                    "text": "Deallocate",
                                    "font-size": 16,
                                    "layout": null
                                },
                                "children": [
                                    {
                                        "data": {
                                            "id": "cuoltspy9eg0",
                                            "created": 1691644216657,
                                            "text": "Dynamic allocated memory must be reclaimed manually and explicitly",
                                            "font-size": 16,
                                            "layout": null
                                        },
                                        "children": []
                                    },
                                    {
                                        "data": {
                                            "id": "cuoluhcth7k0",
                                            "created": 1691644270282,
                                            "text": "e.g. free(p1);",
                                            "font-size": 16,
                                            "layout": null
                                        },
                                        "children": []
                                    }
                                ]
                            },
                            {
                                "data": {
                                    "id": "cuolrut10ko0",
                                    "created": 1691644064468,
                                    "text": "Memory Leak",
                                    "font-size": 16,
                                    "layout": null
                                },
                                "children": [
                                    {
                                        "data": {
                                            "id": "cuoluxdohs00",
                                            "created": 1691644305163,
                                            "text": "Do not use or reclaim allocated memory\nOperating system will not deallocate automatically, \ntherefore wasting memory spaces",
                                            "font-size": 16,
                                            "layout": null
                                        },
                                        "children": []
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "data": {
                            "id": "cuolh6ngq340",
                            "created": 1691643228247,
                            "text": "C++ Style",
                            "font-size": 16,
                            "layout": null
                        },
                        "children": [
                            {
                                "data": {
                                    "id": "cuom1gvwek00",
                                    "created": 1691644817808,
                                    "text": "Allocate",
                                    "font-size": 16,
                                    "layout": null
                                },
                                "children": [
                                    {
                                        "data": {
                                            "id": "cuqs2ymof800",
                                            "created": 1691864981370,
                                            "text": "primitive type",
                                            "font-size": 16,
                                            "layout": null
                                        },
                                        "children": [
                                            {
                                                "data": {
                                                    "id": "cuqs5er0ws00",
                                                    "created": 1691865173189,
                                                    "text": "int * p1 = new int;\n*p1 = 10;",
                                                    "font-size": 16,
                                                    "layout": null
                                                },
                                                "children": []
                                            },
                                            {
                                                "data": {
                                                    "id": "cuqs7kezs680",
                                                    "created": 1691865342251,
                                                    "text": "// Equivalent\nint *p1 = new int();   // *p1 is 0\nint *p1 = new int{};\n// Equivalent\nint *p2 = new int(5);   // *p2 is 5\nint *p2 = new int{5};",
                                                    "font-size": 16,
                                                    "layout": null
                                                },
                                                "children": []
                                            }
                                        ]
                                    },
                                    {
                                        "data": {
                                            "id": "cuqs4cf6sco0",
                                            "created": 1691865089756,
                                            "text": "struct",
                                            "font-size": 16,
                                            "layout": null
                                        },
                                        "children": [
                                            {
                                                "data": {
                                                    "id": "cuqt23zjkcw0",
                                                    "created": 1691867735777,
                                                    "text": "struct User* p1 = new User;\np1->username = \"admin\";\np1->password = \"123456\";",
                                                    "font-size": 16,
                                                    "layout": null
                                                },
                                                "children": []
                                            },
                                            {
                                                "data": {
                                                    "id": "cuqt2w1ktdk0",
                                                    "created": 1691867796850,
                                                    "text": "struct User* p2 = new User {\"admin\", \"123456\"};",
                                                    "font-size": 16,
                                                    "layout": null
                                                },
                                                "children": []
                                            }
                                        ]
                                    },
                                    {
                                        "data": {
                                            "id": "cuqs34vbceo0",
                                            "created": 1691864994953,
                                            "text": "array",
                                            "font-size": 16,
                                            "layout": null
                                        },
                                        "children": [
                                            {
                                                "data": {
                                                    "id": "cuqucthbzo80",
                                                    "created": 1691871396024,
                                                    "text": "int * pa1 = new int[16];",
                                                    "font-size": 16,
                                                    "layout": null
                                                },
                                                "children": []
                                            },
                                            {
                                                "data": {
                                                    "id": "cuqucvza7g80",
                                                    "created": 1691871401463,
                                                    "text": "int * pa1 = new int[16]();\nint * pa1 = new int[16]{};\nint * pa2 = new int[16]{1,2,3};",
                                                    "layout": null,
                                                    "font-size": 16
                                                },
                                                "children": []
                                            },
                                            {
                                                "data": {
                                                    "id": "cuqudjv6sk80",
                                                    "created": 1691871453458,
                                                    "text": "User * users = new User[10] {{\"user1\", \"pw1\"}, {\"user2\", \"pw2\"}};",
                                                    "font-size": 16,
                                                    "layout": null
                                                },
                                                "children": []
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "data": {
                                    "id": "cuom1iy9bjk0",
                                    "created": 1691644822304,
                                    "text": "Deallocate",
                                    "font-size": 16,
                                    "layout": null
                                },
                                "children": [
                                    {
                                        "data": {
                                            "id": "cuquey1vio00",
                                            "created": 1691871562701,
                                            "text": "delete p1;",
                                            "font-size": 16,
                                            "layout": null
                                        },
                                        "children": []
                                    },
                                    {
                                        "data": {
                                            "id": "cuqueyqc1so0",
                                            "created": 1691871564180,
                                            "text": "delete[] pa1;\ndelete[] users;",
                                            "font-size": 16,
                                            "layout": null
                                        },
                                        "children": []
                                    }
                                ]
                            }
                        ]
                    }
                ]
            }
        ]
    },
    "template": "right",
    "theme": "fresh-blue",
    "version": "1.4.43"
}