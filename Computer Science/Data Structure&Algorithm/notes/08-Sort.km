{
    "root": {
        "data": {
            "id": "cywjig7lw8o0",
            "created": 1707074798614,
            "text": "Sort",
            "font-size": 24
        },
        "children": [
            {
                "data": {
                    "id": "cywjj3jdfe80",
                    "created": 1707074849391,
                    "text": "Bubble Sort",
                    "font-size": 16,
                    "layout": null
                },
                "children": [
                    {
                        "data": {
                            "id": "cz1su65c9g00",
                            "created": 1707608906852,
                            "text": "General Idea",
                            "font-size": 16,
                            "layout": null
                        },
                        "children": [
                            {
                                "data": {
                                    "id": "cz1suf9m5400",
                                    "created": 1707608926701,
                                    "text": "For index i on an array with n elements,\nSwap adjacent elements with incorrect order, until the largest element goes to the end on range (0, i), \nand continue this process on (0, i-1)",
                                    "font-size": 16,
                                    "layout": null
                                },
                                "children": []
                            }
                        ]
                    },
                    {
                        "data": {
                            "id": "cz1rp35674g0",
                            "created": 1707605687380,
                            "text": "Pseudo-code",
                            "font-size": 16,
                            "layout": null
                        },
                        "children": [
                            {
                                "data": {
                                    "id": "cz1uvz2com80",
                                    "created": 1707614690382,
                                    "text": "SET n = array.length\nfor i from n-1 to 1 {\n\t    swapped = False\n\t    for k from 0 to i {\n\t            if (array[k] > array[k+1]) {\n\t                    array.swap(k, k+1)\n\t                    swapped = True\n\t            }\n\t    }\n\t    if (not swapped) {\n\t            break\n\t    }\n}",
                                    "layout": null,
                                    "font-size": 16
                                },
                                "children": []
                            }
                        ]
                    },
                    {
                        "data": {
                            "id": "cz1rolp4mg00",
                            "created": 1707605649405,
                            "text": "Time Complexity",
                            "font-size": 16,
                            "layout": null
                        },
                        "children": [
                            {
                                "data": {
                                    "id": "cz1rov6lap40",
                                    "created": 1707605670052,
                                    "text": "O(n^2)",
                                    "font-size": 16,
                                    "layout": null
                                },
                                "children": []
                            }
                        ]
                    },
                    {
                        "data": {
                            "id": "cz1stmq3mw00",
                            "created": 1707608864571,
                            "text": "Code path",
                            "font-size": 16,
                            "layout": null
                        },
                        "children": [
                            {
                                "data": {
                                    "id": "cz1stt02q0o0",
                                    "created": 1707608878235,
                                    "text": "codes.src.algorithms.sort.BubbleSort",
                                    "font-size": 16,
                                    "layout": null
                                },
                                "children": []
                            }
                        ]
                    }
                ]
            },
            {
                "data": {
                    "id": "cywjj7cjz600",
                    "created": 1707074857686,
                    "text": "Selection Sort",
                    "font-size": 16,
                    "layout": null
                },
                "children": [
                    {
                        "data": {
                            "id": "cz1su65c9g00",
                            "created": 1707608906852,
                            "text": "General Idea",
                            "font-size": 16,
                            "layout": null
                        },
                        "children": [
                            {
                                "data": {
                                    "id": "cz1suf9m5400",
                                    "created": 1707608926701,
                                    "text": "For index i on an array with n elements,\nFind minimum value on range (i+1, n-1) and put it on index i, and repeat this process",
                                    "font-size": 16,
                                    "layout": null
                                },
                                "children": []
                            }
                        ]
                    },
                    {
                        "data": {
                            "id": "cz1rp35674g0",
                            "created": 1707605687380,
                            "text": "Pseudo-code",
                            "font-size": 16,
                            "layout": null
                        },
                        "children": [
                            {
                                "data": {
                                    "id": "cz1srei7up40",
                                    "created": 1707608689952,
                                    "text": "SET n = array.length\nfor i from 0 to n-1:\n\t    min_index = i\n\t    for k from i+1 to n-1:\n\t         if array[k] < array[min_index]:\n\t                 min_index = k\n\t    array.swap(i, min_index)",
                                    "font-size": 16,
                                    "layout": null
                                },
                                "children": []
                            }
                        ]
                    },
                    {
                        "data": {
                            "id": "cz1rooqxl680",
                            "created": 1707605656044,
                            "text": "Time Complexity",
                            "font-size": 16,
                            "layout": null
                        },
                        "children": [
                            {
                                "data": {
                                    "id": "cz1rov6lap40",
                                    "created": 1707605670052,
                                    "text": "O(n^2)",
                                    "font-size": 16,
                                    "layout": null
                                },
                                "children": []
                            }
                        ]
                    },
                    {
                        "data": {
                            "id": "cz1stmq3mw00",
                            "created": 1707608864571,
                            "text": "Code path",
                            "font-size": 16,
                            "layout": null
                        },
                        "children": [
                            {
                                "data": {
                                    "id": "cz1stt02q0o0",
                                    "created": 1707608878235,
                                    "text": "codes.src.algorithms.sort.SelectionSort",
                                    "font-size": 16,
                                    "layout": null
                                },
                                "children": []
                            }
                        ]
                    }
                ]
            },
            {
                "data": {
                    "id": "cywjjeu73g80",
                    "created": 1707074873990,
                    "text": "Insertion Sort",
                    "font-size": 16,
                    "layout": null
                },
                "children": [
                    {
                        "data": {
                            "id": "cz1su65c9g00",
                            "created": 1707608906852,
                            "text": "General Idea",
                            "font-size": 16,
                            "layout": null
                        },
                        "children": [
                            {
                                "data": {
                                    "id": "cz1ua2j7g3c0",
                                    "created": 1707612973919,
                                    "text": "For index i ranged (1, n-1) on an array with n element\nPut the i-th element in the correct position in range (0, i-1) and repeat this process",
                                    "font-size": 16,
                                    "layout": null
                                },
                                "children": []
                            }
                        ]
                    },
                    {
                        "data": {
                            "id": "cz1rp35674g0",
                            "created": 1707605687380,
                            "text": "Pseudo-code",
                            "font-size": 16,
                            "layout": null
                        },
                        "children": [
                            {
                                "data": {
                                    "id": "cz1u9p6nzig0",
                                    "created": 1707612944863,
                                    "text": "SET n = array.length\nfor i from 1 to n-1 {\n\t    for k from i-1 to 0 {\n\t            if array[k] > array[k+1] {\n\t                    array.swap(k, k+1)\n\t            } else {\n\t                    break\n\t            }\n\t    }\n}",
                                    "layout": null,
                                    "font-size": 16
                                },
                                "children": []
                            }
                        ]
                    },
                    {
                        "data": {
                            "id": "cz1ros5g3ls0",
                            "created": 1707605663452,
                            "text": "Time Complexity",
                            "font-size": 16,
                            "layout": null
                        },
                        "children": [
                            {
                                "data": {
                                    "id": "cz1rov6lap40",
                                    "created": 1707605670052,
                                    "text": "O(n^2)",
                                    "font-size": 16,
                                    "layout": null
                                },
                                "children": []
                            }
                        ]
                    },
                    {
                        "data": {
                            "id": "cz1stmq3mw00",
                            "created": 1707608864571,
                            "text": "Code path",
                            "font-size": 16,
                            "layout": null
                        },
                        "children": [
                            {
                                "data": {
                                    "id": "cz1stt02q0o0",
                                    "created": 1707608878235,
                                    "text": "codes.src.algorithms.sort.InsertionSort",
                                    "font-size": 16,
                                    "layout": null
                                },
                                "children": []
                            }
                        ]
                    }
                ]
            },
            {
                "data": {
                    "id": "d2vm9rjyw5c0",
                    "created": 1721605655162,
                    "text": "Radix Sort",
                    "font-size": 16,
                    "layout": null
                },
                "children": [
                    {
                        "data": {
                            "id": "cz1su65c9g00",
                            "created": 1707608906852,
                            "text": "General Idea",
                            "font-size": 16,
                            "layout": null
                        },
                        "children": [
                            {
                                "data": {
                                    "id": "cz1ua2j7g3c0",
                                    "created": 1707612973919,
                                    "text": "Sort all integers by their last digit, then second last digit, until sorting by the first digit",
                                    "font-size": 16,
                                    "layout": null
                                },
                                "children": []
                            }
                        ]
                    },
                    {
                        "data": {
                            "id": "d2vmahvg1400",
                            "created": 1721605712452,
                            "text": "Constraint",
                            "font-size": 16,
                            "layout": null
                        },
                        "children": [
                            {
                                "data": {
                                    "id": "d2vmamzchnk0",
                                    "created": 1721605723572,
                                    "text": "Radix Sort can only sort integers",
                                    "font-size": 16,
                                    "layout": null
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "d2vmaneaa0g0",
                                    "created": 1721605724475,
                                    "text": "Non-negative Support",
                                    "font-size": 16,
                                    "layout": null
                                },
                                "children": [
                                    {
                                        "data": {
                                            "id": "d2vmaqso1jk0",
                                            "created": 1721605731875,
                                            "text": "Radix doesn't support negative numbers initially\nWe can subtract the minimum number to all numbers to make them non-negative\nAnd adding the minimum number back at the end to restore all numbers",
                                            "font-size": 16,
                                            "layout": null
                                        },
                                        "children": []
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "data": {
                            "id": "cz1rp35674g0",
                            "created": 1707605687380,
                            "text": "Pseudo-code",
                            "font-size": 16,
                            "layout": null
                        },
                        "children": [
                            {
                                "data": {
                                    "id": "d412w7qixjk0",
                                    "created": 1725816510380,
                                    "text": "Refer to source code",
                                    "font-size": 16
                                },
                                "children": []
                            }
                        ]
                    },
                    {
                        "data": {
                            "id": "d2vmczpg5ig0",
                            "created": 1721605908000,
                            "text": "Technique",
                            "font-size": 16,
                            "layout": null
                        },
                        "children": [
                            {
                                "data": {
                                    "id": "d2vmdqpw5yg0",
                                    "created": 1721605966800,
                                    "text": "Get a certain digit of an integer",
                                    "font-size": 16,
                                    "layout": null
                                },
                                "children": [
                                    {
                                        "data": {
                                            "id": "d2vmej685000",
                                            "created": 1721606028737,
                                            "text": "digit = (num / 10^(n-offset)) % 10\nn is the number of digits of maximum number\noffset is the i-th digit of the number",
                                            "font-size": 16,
                                            "layout": null
                                        },
                                        "children": []
                                    }
                                ]
                            },
                            {
                                "data": {
                                    "id": "d412juriuao0",
                                    "created": 1725815541773,
                                    "text": "Sort by a certain digit of all integers",
                                    "font-size": 16,
                                    "layout": null
                                },
                                "children": [
                                    {
                                        "data": {
                                            "id": "d412k37oww00",
                                            "created": 1725815560164,
                                            "text": "Get frequency of 0-9 on this digit, calculate prefix sum of the frequency\nThen place integers based on prefix sum to achieve sorting",
                                            "font-size": 16,
                                            "layout": null
                                        },
                                        "children": []
                                    }
                                ]
                            },
                            {
                                "data": {
                                    "id": "d2vmdqbmaxc0",
                                    "created": 1721605965937,
                                    "text": "Prefix sum of frequency",
                                    "font-size": 16,
                                    "layout": null
                                },
                                "children": [
                                    {
                                        "data": {
                                            "id": "d412mqc4mcg0",
                                            "created": 1725815767227,
                                            "text": "digit_freq[i] = digit_freq[i] + digit_freq[i-1]",
                                            "font-size": 16,
                                            "layout": null
                                        },
                                        "children": []
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "data": {
                            "id": "cz1ros5g3ls0",
                            "created": 1707605663452,
                            "text": "Time Complexity",
                            "font-size": 16,
                            "layout": null
                        },
                        "children": [
                            {
                                "data": {
                                    "id": "cz1rov6lap40",
                                    "created": 1707605670052,
                                    "text": "O(n log n)",
                                    "font-size": 16,
                                    "layout": null
                                },
                                "children": []
                            }
                        ]
                    },
                    {
                        "data": {
                            "id": "cz1stmq3mw00",
                            "created": 1707608864571,
                            "text": "Code path",
                            "font-size": 16,
                            "layout": null
                        },
                        "children": [
                            {
                                "data": {
                                    "id": "cz1stt02q0o0",
                                    "created": 1707608878235,
                                    "text": "codes.src.algorithms.sort.RadixSort",
                                    "font-size": 16,
                                    "layout": null
                                },
                                "children": []
                            }
                        ]
                    }
                ]
            }
        ]
    },
    "template": "right",
    "theme": "fresh-blue",
    "version": "1.4.43"
}